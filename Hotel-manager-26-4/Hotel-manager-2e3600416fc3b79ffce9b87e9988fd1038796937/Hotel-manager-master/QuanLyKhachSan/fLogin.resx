<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnLogin.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAASUVORK5CYII=
</value>
  </data>
</root>